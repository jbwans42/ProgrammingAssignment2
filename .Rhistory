nearest.neighbour <- c(4, 7, 3, 5, 8, 3, 7, 4, 3, 5, 5, 4)
nearest.neighbour
testosterone <- c(22.2, 26.1, 21.5, 23.8, 23.8, 20.5, 24.6, 22.6, 19.9, 23.9, 19.8, 21.3)
plot(nearest.neighbour, testosterone)
cor.test(nearest.neighbour, testosterone)
q()
6+3
3^3
22*15+6
22*(15+6)
22^(2+7)
(8+22)*3
(12-2.8)^(1.5+1.3924)
ls()
x1 <- 73
x1
x2 <- 101+36
x2
x3 <- x1+x2
x3
(X3-1)^.25
(x3-1)^.25
x3
x3 <- x1*x2
x3
(x3-1)^.25
sqrt(225)
log10(x1)
log10(x3)
sq4t(x2)
xqrt(x2)
sqrt(x2)
x2^.5
x4 <- 67.8953
round(x4)
round(x4,3)
floor(x4)
ceiling(x4)
X <- seq(1, 10)
X
Y <- c(2, 4, 6, 8, 10, 12, 14, 16, 18, 10)
Y
Y <- c(2, 4, 6, 8, 10, 12, 14, 16, 18, 20)
Y
X2 ,_ seq(1, 10, by = 2)
X2 <- seq(1, 10, by = 2)
X2
X + X2
logX <- log(X)
logx
logX
ls()
rm(x1, x2, x3, x4)
ls()
x1 <- c(1,3,5,7)
x1
x2 <- c(2,4,6,8)
x2
x2 - x1
x3 <- x1*x2
x3
x4 <- sqrt(x3)
x4
mean(x4)
median(x4)
q()
ls
ls()
del
rm
rm
rm(x1)
ls())
ls()
rm(x2, x3, x4)
ls()
x1<-seq(1,7, by=2)
x1
x2<-seq(2,8, by=2)
x2
x2-x1
x3<-x2*x1
x3
x4<-sqrt(x3)
x4
mean(x4)
median(x3)
rm(x1,x2,x3,x4)
ls()
X
X2
Y
V1<-seq(1,11,by=2)
V1
mat1<-matrix(V1,nrow=2)
mat1
mat2<-matrix(V1,nrow=2,byrow=TRUE)
mat2
mode(V1)
class(V1)
v1
V1
class(V1)
q()
ls()
x1<-seq(1,7,by=2)
x1
x2<-seq(2,8,by=2)
x2
x3<-x1*x2
xs
x3
x4<-sqrt(x3)
x4
mean(x4)
median(x3)
v1
V1
mat1
mat2
mode x1
mode(x1)
class(x1)
class(x2)
class(V1)
x1[3]
x1
x1[-3]
x1[1] + x4[4]
x1
x4
In<-c(1,4)
In
x5<-sum(x3[In],x4[In])
x5
x3[In}+x4[In]
x3[In]+x4[In]
x3
x4
x5<-c(x3[In]+x4[In])
x5
x2
sum(x2[x2<7])
x1
mean(x1[x1>=3])
mat1
mat2
mat[1,2]
mat1[1,2]
mat1[1,2]*mat2[2,3]
V3<-c(mat2[,2]*mean(mat1[2,]))
V3
mat3<-matrix(data=c(mat1[1,],mat2[1,]))
mat3
mat3<-matrix(data=mat1[1,],mat2[1,],nrow=3,ncol=2)
mat3
mat1
mat2
mat3<-matrix(data=mat1[1,],mat2[1,],nrow=3,ncol=2,bycol=TRUE)
mat3<-matrix(data=mat1[1,],mat2[1,],nrow=3,ncol=2,byrow=FALSE)
mat3<-matrix(mat[1,],mat2[1,],nrow=3,ncol=2)
mat3<-matrix(mat1[1,],mat2[1,],nrow=3,ncol=2)
mat3
mat1
mat2
mat1[,]
mat1[1,]
mat2[1,]
matrix
mat3
mat3<-matrix(data=(mat1[1,],mat2[1,]),nrow=3,ncol=2)
mat3<-matrix(data=c(mat1[1,],mat2[1,]),nrow=3,ncol=2)
mat3
mat1[1,]
mat2[1,]
q()
demo(graphics)
ls()
x1
Y
yscale
mat2
pie.sales
packages()
ls()
pwd
cwd
cwd()
dir()
q()
install.packages("swirl")
library(swirl)
ls()
rm(list=ls())
ls()
swirl()
swirl()
5+7
x <- 5 + 7
x
y<- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2+100
my_sqrt<- sqrt(z - 1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4)+ c(0,10,100)
z*2+1000
my_
ls()
my_div
1:20
pi:10
15:1
`:`
?`:`
seq(1,20)
seq(0,10,by=0.5)
my_seq<-seq(5,10, length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse= " ")
my_name <- c(my_char, "Jim Wanslow")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z", sep = "")
)
paste(1:3, c("X", "Y", "Z"), sep= "")
paste(LETTERS, 1:4, sep = "-")
ls()
exit
quit
q()
x<-1:4
x
y<--2
y
X+y
x+y
y<-2
y
x+y
x <- c(17, 14, 4, 5, 13, 12, 10)
x
x[x>=11]<-4
x
x <- c(1,3, 5)
y <- c(3, 2, 10
x
x
y
y<-c(3,2,10)
y
x
cbind(x,y)
x <- c(4, TRUE)
class(x)
pwd
cwd
dir
cwd()
pwd()
wd()
q()
getwd()
ls()
q()
x[x >= 11] <- 4
x
x[x >= 11] <- 4
x
x <- c(17, 14, 4, 5, 13, 12, 10)
x
x[x >= 11] <- 4
x
x <- 1:4
y <- 2
x+y
library(swirl)
swirl()
x<-c(44,NA,5,NA)
x*3
y <- rnorm(1000)
y
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x(-c(2,10)]
x[-c(2,10)]
vect <- c(foo - 11, bar - 2, norf = NA)
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect("bar")
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20,nrow = 4, nco; = 5)
my_matrix2 <- matrix(1:20,nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
q()
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
x
if(x > 5) {
x <- 0 }
f <- function(x) { g<- function(y) {Y+z}
z <- 4
x + g(x) }
z <- 10
f(3)
f <- function(x) { g<- function(y) {y+z}
z <- 4
x + g(x) }
z <- 10
f(3)
x <- 5
y <- if(x < 3) { NA } else {10}
y
q()
dir(0)
dir()
getwd()
dir P*
dir("P*")
dir(P*)
dir()
getwd()
setwd("C:/Users/Jim/ProgrammingAssignment2")
source('C:/Users/Jim/ProgrammingAssignment2/cachematrix.R')
ls()
my_matrix
test_matrix <- matrix(c(2,5,7,9,6,5,3,1,8),nrow=1, ncol=1)
test_matrix
test_matrix <- matrix(c(2,5,7,9,6,5,3,1,8),nrow=3, ncol=3)
test_matrix
tst_cmat <- makeCacheMatrix(test_matrix)
tst_cmat
cacheSolve(tst_cmat)
tst_cmat$getsolve
tst_cmat$setsolve
cacheSolve(tst_cmat)
source('C:/Users/Jim/ProgrammingAssignment2/cachematrix.R')
tst_cmat <- makeCacheMatrix(test_matrix)
cacheSolve(tst_cmat)
cacheSolve(tst_cmat)
cacheSolve(tst_cmat)
source('C:/Users/Jim/ProgrammingAssignment2/cachematrix.R')
